<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.15.0@5c774aca4746caf3d239d9c8cadb9f882ca29352">
  <file src="src/FakeVariables.php">
    <DocblockTypeContradiction>
      <code>!\is_string($name)</code>
      <code><![CDATA[return !\is_string($name)
                || '' === $name
                || \trim($name) !== $name;]]></code>
      <code><![CDATA[return !\is_string($value)
                && false !== $value;]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/ReadOnlyVariables.php">
    <DocblockTypeContradiction>
      <code>!\is_string($name)</code>
      <code><![CDATA[return !\is_string($name)
                || '' === $name
                || \trim($name) !== $name;]]></code>
      <code><![CDATA[return !\is_string($value)
                && false !== $value;]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/TestVariables.php">
    <UnnecessaryVarAnnotation>
      <code><![CDATA[array<string, string>]]></code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="test/DataProvider/Name.php">
    <MixedReturnTypeCoercion>
      <code><![CDATA[\Generator<string, array<int>>]]></code>
      <code><![CDATA[\Generator<string, array<string>>]]></code>
      <code><![CDATA[self::provideDataForValues([
            'int-greater-than-one' => $faker->numberBetween(2),
            'int-less-than-minus-one' => -1 * $faker->numberBetween(2),
            'int-minus-one' => -1,
            'int-one' => 1,
            'int-zero' => 0,
        ])]]></code>
      <code><![CDATA[self::provideDataForValues([
            'string-blank' => ' ',
            'string-empty' => '',
            'string-untrimmed' => \sprintf(
                ' %s ',
                self::faker()->sentence(),
            ),
        ])]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code>invalidType</code>
      <code>invalidValue</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/DataProvider/Value.php">
    <MixedReturnTypeCoercion>
      <code><![CDATA[\Generator<string, array<int, null|array|float|int|resource|\stdClass|true>>]]></code>
      <code><![CDATA[\Generator<string, array<null|int|object|true>>]]></code>
      <code><![CDATA[self::provideDataForValues([
            'array' => $faker->words(),
            'float' => $faker->randomFloat(),
            'int' => $faker->numberBetween(2),
            'null' => null,
            'object' => new \stdClass(),
            'resource' => $resource,
        ])]]></code>
      <code><![CDATA[self::provideDataForValues([
            'bool-true' => true,
        ])]]></code>
    </MixedReturnTypeCoercion>
    <PossiblyUnusedMethod>
      <code>invalidType</code>
      <code>invalidValue</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/FakeVariablesTest.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
            $name => $value,
        ]]]></code>
      <code><![CDATA[[
            self::NAME => $value,
        ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayOffset>
      <code><![CDATA[[
            $name => $value,
        ]]]></code>
    </MixedArrayOffset>
  </file>
  <file src="test/Unit/ReadOnlyVariablesTest.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[[
            $name => $value,
        ]]]></code>
      <code><![CDATA[[
            self::NAME => $value,
        ]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayOffset>
      <code><![CDATA[[
            $name => $value,
        ]]]></code>
    </MixedArrayOffset>
  </file>
</files>
